/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode t=head;
        int c=0;
        while(t!=null)
        {
            c++;
            t=t.next;
        }
        int start=0;
        int end=c-1;
        
        while(start<end)
        {
            ListNode left=getNodeAt(start,head);
            ListNode right=getNodeAt(end,head);
            
            int tmp=left.val;
            left.val=right.val;
            right.val=tmp;
            start++;
            end--;
        }
        
        return head;
    }
    
    public ListNode getNodeAt(int index,ListNode head)
    {
        ListNode temp=head;
        for(int i=0;i<index;i++)
        {
            temp=temp.next;
        }
        return temp;
        
    }
}
