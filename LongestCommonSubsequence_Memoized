class Solution {
    static int t[][]=new int[1001][1001];
    public int longestCommonSubsequence(String text1, String text2) {
        int m=text1.length();
        int n=text2.length();
        for(int i=0;i<m+1;i++)
        {
            for(int j=0;j<n+1;j++)
            {
                t[i][j]=-1;
            }
        }
        return lcs(text1,text2,m,n);
        
    }
    
    public int lcs(String text1,String text2,int m,int n)
    {
        if(n==0||m==0)
        {
            return 0;
        }
        if(t[m][n]!=-1)
        {
            return t[m][n];
        }
        
        if(text1.charAt(m-1)==text2.charAt(n-1))
        {
            t[m][n]=1+lcs(text1,text2,m-1,n-1);
        }
        else
        {
            t[m][n]=Math.max(lcs(text1,text2,m-1,n),lcs(text1,text2,m,n-1));
        }
        return t[m][n];
    }
    
    
}
