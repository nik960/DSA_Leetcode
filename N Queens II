class Solution {
    
    public int totalNQueens(int n) {
        
        if(n==1)
        {
            return 1;
        }
        if(n==2||n==3)
        {
            return 0;
        }
        int board[][]=new int[n][n];
        int c=0;
            c=solveNQueens(board,0,n,c);
        return c;
    }
    public int solveNQueens(int board[][],int row,int n,int c)
    {
        if(row==n)
        {
            c++;
            return c;
        }
        
        for(int i=0;i<n;i++)
        {
          
            if(isSafe(board,row,i,n))
            {
                board[row][i]=1;
                c=solveNQueens(board,row+1,n,c);
                board[row][i]=0;
            }
        
        }
        return c;
    }
    
    public boolean isSafe(int board[][],int row,int col,int n)
    {
        for(int i=0;i<n;i++)
        {
            if(board[i][col]==1)
            {
                return false;
            }
        }
        
        for(int i=row,j=col;i>=0&&j>=0;i--,j--)
        {
            if(board[i][j]==1)
            {
                return false;
            }
        }
          for(int i=row,j=col;i>=0 && j<n;i--,j++)
        {
            if(board[i][j]==1)
            {
                return false;
            }
        }
        return true;
        
    }
}


